import speech_recognition as sr
from gtts import gTTS
import subprocess
from pathlib import Path
import os
import time
import webbrowser
# from pydub import AudioSegment
# from pydub.playback import play



speakers = {
    'name':["alina","kolya","vlad","dima","andrey","pyetr"],
    "commands":{
        "greetings":["–ø—Ä–∏–≤–µ—Ç","–ø—Ä–∏–≤–µ—Ç–∏–∫","–∫—É","—Ö–∞–π"],
        "launch_google_chrome":["–∑–∞–ø—É—Å—Ç–∏ google chrome","–≤–∫–ª—é—á–∏ google chrome"],
        "launch_youtube":["–∑–∞–ø—É—Å–∫ youtube", "–∑–∞–ø—É—Å—Ç–∏ youtube","youtube","–≤–∫–ª—é—á–∏ youtube"],
        "write_to_notes":['–∑–∞–ø–∏—à–∏ –∑–∞–º–µ—Ç–∫—É', '—Å–¥–µ–ª–∞–π –∑–∞–º–µ—Ç–∫—É','—Ö–æ—á—É –∑–∞–ø–æ–º–Ω–∏—Ç—å —Ñ—Ä–∞–∑—É','–Ω–∞–ø–∏—à–∏ –∑–∞–º–µ—Ç–∫—É'],
    }

           }

print(speakers["name"])
input_speaker = input("–≤–≤–µ–¥–∏—Ç–µ —Å–ø–∏–∫–µ—Ä–∞:").lower()



# –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –∑–≤—É–∫–∞ –∏ –ø–µ—Ä–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—á–∏ –≤ —Ç–µ–∫—Å—Ç
def command_pronunciations():
    recognizer = sr.Recognizer()
    try:
        with sr.Microphone() as source:
            print("–ì–æ–≤–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã/—á—Ç–æ –Ω–∞–¥–æ –∑–∞–ø–∏—Å–∞—Ç—å...")
            recognizer.adjust_for_ambient_noise(source)

            audio = recognizer.listen(source, phrase_time_limit=1.5)
            print("–†–∞—Å–ø–æ–∑–Ω–∞—é...")
            text = recognizer.recognize_google(audio, language="ru-RU").lower()
            print(text)
            return text
    except sr.UnknownValueError:
        print("–°–∫–∞–∂–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –≥—Ä–æ–º—á–µ")

def file_not_found():
    speaker = Path(f"speakers/{input_speaker}/{input_speaker}_file_not_found.ogg")
    if speaker.exists():
        subprocess.run(["start", "", speaker.absolute()], shell=True)
        print("—ç—Ç–æ—Ç —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    else:
        print("—ç—Ç–æ—Ç —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")



def speaker_check(name_speaker):

    if input_speaker in speakers['name']:
        speaker = Path(f"speakers/{input_speaker}/{input_speaker}_hello.ogg")
        if speaker.exists():
            print(f"–í–∞—à —Å–ø–∏–∫–µ—Ä {input_speaker} –Ω–∞–π–¥–µ–Ω")
            subprocess.run(["start", "", speaker.absolute()], shell=True)
            time.sleep(4)

    else:
        print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        exit()




def launch_google_chrome():
    a = r"C:\Program Files\Google\Chrome\Application\chrome.exe"
    speaker = Path(f"speakers/{input_speaker}/{input_speaker}_launch_google_chrome.ogg")
    if speaker.exists():
        subprocess.run(["start", "", speaker.absolute()], shell=True)
        time.sleep(3)
        subprocess.Popen([a])
    else:
        file_not_found()


def write_to_notes():
    qwery = command_pronunciations()
    speaker = Path(f"speakers/{input_speaker}/{input_speaker}_launch_google_chrome.ogg")
    if speaker.exists():
        with open(r"notes/write_to_notes","a",encoding="utf-8") as file:
            file.write(f"üî≥{qwery}\n")
            print(f"–í–∞—à–∞ –∑–∞–º–µ—Ç–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞")
            time.sleep(3)
    else:
        file_not_found()



def launch_youtube():
    webbrowser.register('Google-chrome',None,webbrowser.BackgroundBrowser(r"C:\Program Files\Google\Chrome\Application\chrome.exe"))
    speaker = Path(f"speakers/{input_speaker}/{input_speaker}_launch_google_chrome.ogg")
    if speaker.exists():
        webbrowser.get("Google-chrome").open("youtube.com/")
        time.sleep(3)

    else:
        file_not_found()



def greetings():
    speaker = Path(f"speakers/{input_speaker}/{input_speaker}_greetings.ogg")

    if speaker.exists():
        subprocess.run(["start", "", speaker.absolute()], shell=True)
    else:
        file_not_found()



def main():
    qwery = command_pronunciations()
    for k,v in speakers["commands"].items():
        if qwery in v:
            globals()[k]()

if __name__ == '__main__':
    speaker_check(input_speaker)
    main()


